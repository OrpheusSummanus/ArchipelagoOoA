# Most of the code here has to do with interactions other than
# the id $60 "treasure" interaction that must use treasure interaction
# graphics.

# set hl = the address of the sprite for treasure with ID b and subID c.
3f//lookupItemSprite_body: |
    ld e,$15
    ld hl,getTreasureDataSprite
    call interBankCall
    ld a,e
    ld hl,$66dc     ; interaction60SubidData
    add a,a
    rst 10
    ld a,e
    rst 10
    ret

# format (ID, subID, jump address). these functions *must* pop af as the last
# instruction before returning.
3f//customSpriteJumpTable: |
    dwbe 4700, locations.memberShop1
    dwbe 4702, locations.memberShop2
    dwbe 4705, locations.memberShop3
    dwbe 4704, locations.horonShop1
    dwbe 4703, locations.horonShop2
    dwbe 4701, locations.horonShop3
    dwbe 470e, locations.advanceShop1
    dwbe 470f, locations.advanceShop2
    dwbe 4710, locations.advanceShop3
    dwbe 4709, locations.syrupShop2
    dwbe 470a, locations.syrupShop3
    dwbe 470b, locations.syrupShop1
    dwbe 5900, locations.lostWoodsPedestal
    dwbe 8100, locations.subrosianMarket1
    dwbe 8104, locations.subrosianMarket2
    dwbe 810a, locations.subrosianMarket3
    dwbe 810c, locations.subrosianMarket4
    dwbe 810d, locations.subrosianMarket5
    dwbe c600, locations.d0SwordChest
    dwbe e602, locations.templeOfSeasons
    dwbe 9400, locations.mapleTrade
    db ff

# overrides the sprite data loaded for certain interactions. this is mostly
# used for "non-item" interactions that depict items, like the ones in shops.
3f//checkLoadCustomSprite: |
    call $4437  ; _interactionGetData
    push af
    push hl
    push bc
    
    ld e,$41
    ld a,(de)
    ld b,a
    inc e
    ld a,(de)
    ld c,a
    ld e,$02
    ld hl,customSpriteJumpTable
    call searchDoubleKey
    jr c,@customSprite
    pop bc
    pop hl
    pop af
    ret

    @customSprite:
    pop bc
    ldi a,(hl)
    ld b,a
    ld c,(hl)
    pop hl
    call lookupItemSprite_body
    pop af
    ret
3f/4356/: call checkLoadCustomSprite

# Inject the "Archipelago Item" sprite in an unused sector of last items spritesheet
1c/3a80/: |
    db $03,$03,$07,$04,$0F,$08,$3F,$3C,$7E,$43,$F9,$87,$FD,$BF,$FA,$C6
    db $FB,$87,$F7,$8C,$EF,$98,$8F,$F8,$4F,$78,$38,$3F,$04,$07,$03,$03
    db $C0,$C0,$E0,$20,$90,$70,$3C,$FC,$7E,$C2,$F9,$87,$FD,$BF,$7F,$43
    db $F9,$C7,$F1,$2F,$D1,$3F,$91,$7F,$12,$FE,$1C,$FC,$20,$E0,$C0,$C0
# Use that custom sprite with a blue palette inside GFX#53 (will be used for regular remote items)
3f/67d5/: db $61,$06,$43
# Use that custom sprite with a red palette inside GFX#52 (will be used for progression remote items)
3f/67d2/: db $61,$06,$53

# Make the rod of seasons interaction behave like a regular item, graphically.
# Otherwise, asymmetric wide items can't go there.
14//overrideAnimationId: |
    ld e,$41
    ld a,(de) # ID
    cp $e6
    ret nz
    ld e,$42
    ld a,(de) # sub ID
    cp $02
    ld a,$e6
    ret nz
    ld a,$60
    ret
00/25d9/: call overrideAnimationId
00/2600/: call overrideAnimationId

# give the noble sword (lost woods pedestal) object OAM pointers compatible
# with normal treasure graphics.
14/53d7/: dw 5719
14/55a7/: dw 684f

# give items that don't normally appear as treasure interactions entries in
# the treasure graphics table.
3f/67b4/: db 5d,0c,13 # member's card
3f/67b7/: db 65,14,33 # treasure map
3f/67ba/: db 60,14,00 # fool's ore
3f/67c6/: db 5d,10,26 # rare peach stone
3f/67c9/: db 65,0c,23 # ribbon
3f/67bd/: db 5d,00,23 # potion

# also flutes with different palettes? idk how this works in vanilla
3f/6790/: |
    db 5f,16,33
    db 5f,16,23
    db 5f,16,13
