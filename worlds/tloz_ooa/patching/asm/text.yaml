#0a/7b9e/: |
#    ret
#    nop
#    nop
#
#1e/6265/TX_1704: /include text.getEmberSeeds # 1704, cutscene after d1
#10//useEmberSeedText: |
#    cp $e5
#    jr nz,@done
#    ld bc,$1704
#    @done:
#    jp showText
#10/4ade/: call useEmberSeedText

# Remove the mention of seeds being included with the seed satchel, since Ember was most likely
# the wrong one in random given seed type
#1d/5730/: db $00

1e/4da5/TX_0101: /include text.lynnaShop1 # (Cutscene save impa pt1)
1e/4e45/TX_0102: /include text.lynnaShop2 # (Cutscene save impa pt2)
1e/4e85/TX_0103: /include text.lynnaShop3 # (Cutscene save impa pt2 - LINKED)
1e/4fec/TX_0113: /include text.advanceShop1 # (Cutscene Unpossessed Impa pt2)
1e/51fa/TX_0118: /include text.advanceShop2 # (Cutscene Unpossessed Impa pt3)
1f/60b1/TX_0e24: /include text.advanceShop3 # (Original)
1e/5067/TX_0114: /include text.syrupShop1 # (Cutscene Unpossessed Impa pt4)
1e/519e/TX_0117: /include text.syrupShop2 # (Cutscene After Sword Given)
1e/535b/TX_0125: /include text.syrupShop3 # (Cutscene at the entrance of the black tower pt2)
1f/5df5/TX_0e09: /include text.hiddenShop1 # (Original)
1e/5569/TX_012a: /include text.hiddenShop2 # (Cutscene Zelda saved)
1e/56c3/TX_0131: /include text.hiddenShop3 # (Cutscene with zelda)

# replace text in script command 9a (showtextnonexitable) using
# scriptTextReplacements: four-byte entries, first two bytes are old text
# index, second two bytes are new text index.
0c//scriptTextReplacements: |
    db $0e,$04,$01,$01    ; Lynna shop 1
    db $0e,$03,$01,$02    ; Lynna shop 2
    db $0e,$02,$01,$03    ; Lynna shop 3
    db $0e,$1c,$01,$13    ; Advance shop 1
    db $0e,$23,$01,$18    ; Advance shop 2
    db $0d,$0a,$01,$14    ; Syrup shop 1
    db $0d,$01,$01,$17    ; Syrup shop 2
    db $0d,$05,$01,$25    ; Syrup shop 3
    db $0e,$1d,$01,$2a    ; Hidden shop 2
    db $0e,$2c,$01,$31    ; Hidden shop 3
    db $ff
0c//scriptShowTextNonExitableCustom: |
    push de
    ld e,$02
    ld hl,scriptTextReplacements
    call searchDoubleKey
    pop de
    jr nc,@done
    ldi a,(hl)
    ld b,a
    ld c,(hl)
    @done:
    jp showTextNonExitable

0c/4300/: call scriptShowTextNonExitableCustom

# Some required redirections
0c/4822/: db $2c
0c/483c/: db $1c

1e/4957/getArchipelagoItemText: |
    db $02,$7c,$20,$61,$6e,$01                          ; You found an
    db $69,$74,$65,$6d,$05,$55,$20,$61,$6e,$03,$b9,$01  ; item for another
    db $03,$c9,$21,$00                                  ; world!

1e/47d5/KingZoraPotionText: |
    db $02,$7c,$01                                     ; You got
    db $4b,$69,$6e,$67,$20,$5a,$6f,$72,$61,$27,$73,$01 ; King Zora's 
    db $09,$01,$03,$0a,$09,$00,$21,$00                 ; Magic Potion! 

#3f//TX_560f: /include text.smallKeyD0
#3f//TX_5610: /include text.smallKeyD1
#3f//TX_5611: /include text.smallKeyD2
#3f//TX_5612: /include text.smallKeyD3
#3f//TX_5613: /include text.smallKeyD4
#3f//TX_5614: /include text.smallKeyD5
#3f//TX_5615: /include text.smallKeyD6Present
#3f//TX_5616: /include text.smallKeyD7
#3f//TX_5617: /include text.smallKeyD8
#3f//TX_5618: /include text.smallKeyD6Past
#3f//TX_5619: /include text.bossKeyD1
#3f//TX_561a: /include text.bossKeyD2
#3f//TX_561b: /include text.bossKeyD3
#3f//TX_561c: /include text.bossKeyD4
#3f//TX_561d: /include text.bossKeyD5
#3f//TX_561e: /include text.bossKeyD6Present
#3f//TX_561f: /include text.bossKeyD7
#3f//TX_5620: /include text.bossKeyD8
#3f//TX_5621: /include text.bossKeyD6Past
#3f//TX_5622: /include text.dungeonMapD1
#3f//TX_5623: /include text.dungeonMapD2
#3f//TX_5624: /include text.dungeonMapD3
#3f//TX_5625: /include text.dungeonMapD4
#3f//TX_5626: /include text.dungeonMapD5
#3f//TX_5627: /include text.dungeonMapD6Present
#3f//TX_5628: /include text.dungeonMapD7
#3f//TX_5629: /include text.dungeonMapD8
#3f//TX_562a: /include text.dungeonMapD6Past
#3f//TX_562b: /include text.compassD1
#3f//TX_562c: /include text.compassD2
#3f//TX_562d: /include text.compassD3
#3f//TX_562e: /include text.compassD4
#3f//TX_562f: /include text.compassD5
#3f//TX_5630: /include text.compassD6Present
#3f//TX_5631: /include text.compassD7
#3f//TX_5632: /include text.compassD8
#3f//TX_5633: /include text.compassD6Past
#
#3f//customTextTable: |
#    dw TX_5600, TX_5601, TX_5602, TX_5603
#    dw TX_5604, TX_5605, TX_5606, TX_5607
#    dw TX_5608, TX_5609, TX_560a, TX_560b
#    dw TX_560c, TX_560d, TX_560e, TX_560f
#    dw TX_5610, TX_5611, TX_5612, TX_5613
#    dw TX_5614, TX_5615, TX_5616, TX_5617
#    dw TX_5618, TX_5619, TX_561a, TX_561b
#    dw TX_561c, TX_561d, TX_561e, TX_561f
#    dw TX_5620, TX_5621, TX_5622, TX_5623
#    dw TX_5624, TX_5625, TX_5626, TX_5627
#    dw TX_5628, TX_5629, TX_562a, TX_562b
#    dw TX_562c, TX_562d, TX_562e, TX_562f
#    dw TX_5630, TX_5631, TX_5632, TX_5633
#
## Override getTextAddress to have a specific custom bank_id point to text somewhere else
#3f//checkCustomTextOverride: |
#    ld (w7ActiveBank),a
#    ld a,(wTextIndexH)
#    cp $5a      ; 0x56 is the custom text group, and there are 4 dictionaries before them
#    ret nz
#    ld hl,customTextTable
#    ld a,(wTextIndexL)
#    rst 18      ; rst_addDoubleIndex
#    ldi a,(hl)
#    ld h,(hl)
#    ld l,a
#    ld a,$3f    ; 0x3f is the ROM bank where custom text is located
#    ld (w7ActiveBank),a
#    ret
#3f/0fd9/: call checkCustomTextOverride